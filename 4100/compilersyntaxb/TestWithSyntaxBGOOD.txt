Oscar Santiago 5856, CS4100, FALL 2022
INPUT FILE TO PROCESS IS: c:/Users/oscan/Documents/lecole/4100/compilersyntaxb/SyntaxBGOOD.txt
0001 UNIT GOOD3B;
        UNITT |         0015 |  UNIT
--> Entering Program
        IDENT |         0050 |  GOOD3B
        SEMCO |         0036 |  ;
0002
0003 (* This Part 3B test file should have NO errors! *)
0004 VAR COUNT, TOTAL : INTEGER;
        VARRR |         0013 |  VAR
 --> Entering Block
  --> Entering VariableDecSec
        IDENT |         0050 |  COUNT
   --> Entering VariableDeclaration
        COMMA |         0044 |  ,
        IDENT |         0050 |  TOTAL
        COLON |         0047 |  :
        INTEG |         0051 |  INTEGER
    --> Entering SimpleType
        SEMCO |         0036 |  ;
    <-- Exiting SimpleType
0005 VAR I : INTEGER;
        VARRR |         0013 |  VAR
   <-- Exiting VariableDeclaration
  <-- Exiting VariableDecSec
  --> Entering VariableDecSec
        IDENT |         0050 |  I
   --> Entering VariableDeclaration
        COLON |         0047 |  :
        INTEG |         0051 |  INTEGER
    --> Entering SimpleType
        SEMCO |         0036 |  ;
    <-- Exiting SimpleType
0006 VAR STOP : integer;
        VARRR |         0013 |  VAR
   <-- Exiting VariableDeclaration
  <-- Exiting VariableDecSec
  --> Entering VariableDecSec
        IDENT |         0050 |  STOP
   --> Entering VariableDeclaration
        COLON |         0047 |  :
        INTEG |         0051 |  integer
    --> Entering SimpleType
        SEMCO |         0036 |  ;
    <-- Exiting SimpleType
0007
0008 BEGIN
        BEGIN |         0011 |  BEGIN
   <-- Exiting VariableDeclaration
  <-- Exiting VariableDecSec
0009 READLN(STOP);
        READL |         0010 |  READLN
  --> Entering Statement
        PAR_L |         0034 |  (
        IDENT |         0050 |  STOP
        PAR_R |         0035 |  )
        SEMCO |         0036 |  ;
  <-- Exiting Statement
0010 TOTAL := 12;
        IDENT |         0050 |  TOTAL
  --> Entering Statement
   --> Entering handleAssignment
    --> Entering Variable
        ASIGN |         0037 |  :=
    <-- Exiting Variable
        INTEG |         0051 |  12
    --> Entering SimpleExpression
     --> Entering Term
      --> Entering Factor
       --> Entering UnsignedConstant
        --> Entering UnsignedNumber
        SEMCO |         0036 |  ;
        <-- Exiting UnsignedNumber
       <-- Exiting UnsignedConstant
      <-- Exiting Factor
     <-- Exiting Term
    <-- Exiting SimpleExpression
   <-- Exiting handleAssignment
  <-- Exiting Statement
0011 FOR I := 1 TO STOP DO
        FORRR |         0007 |  FOR
  --> Entering Statement
        IDENT |         0050 |  I
   --> Entering Variable
        ASIGN |         0037 |  :=
   <-- Exiting Variable
        INTEG |         0051 |  1
   --> Entering SimpleExpression
    --> Entering Term
     --> Entering Factor
      --> Entering UnsignedConstant
       --> Entering UnsignedNumber
        TOOOO |         0002 |  TO
       <-- Exiting UnsignedNumber
      <-- Exiting UnsignedConstant
     <-- Exiting Factor
    <-- Exiting Term
   <-- Exiting SimpleExpression
        IDENT |         0050 |  STOP
   --> Entering SimpleExpression
    --> Entering Term
     --> Entering Factor
      --> Entering Variable
        DOOOO |         0003 |  DO
      <-- Exiting Variable
     <-- Exiting Factor
    <-- Exiting Term
   <-- Exiting SimpleExpression
0012   BEGIN
        BEGIN |         0011 |  BEGIN
   --> Entering Statement
0013   TOTAL := TOTAL + I
        IDENT |         0050 |  TOTAL
    --> Entering Statement
     --> Entering handleAssignment
      --> Entering Variable
        ASIGN |         0037 |  :=
      <-- Exiting Variable
        IDENT |         0050 |  TOTAL
      --> Entering SimpleExpression
       --> Entering Term
        --> Entering Factor
         --> Entering Variable
        ADD:) |         0032 |  +
         <-- Exiting Variable
        <-- Exiting Factor
       <-- Exiting Term
       --> Entering Addop
        IDENT |         0050 |  I
       <-- Exiting Addop
       --> Entering Term
        --> Entering Factor
         --> Entering Variable
0014   END;
        ENDDD |         0012 |  END
         <-- Exiting Variable
        <-- Exiting Factor
       <-- Exiting Term
      <-- Exiting SimpleExpression
     <-- Exiting handleAssignment
    <-- Exiting Statement
        SEMCO |         0036 |  ;
   <-- Exiting Statement
  <-- Exiting Statement
0015
0016 REPEAT
        REPEA |         0017 |  REPEAT
  --> Entering Statement
0017   TOTAL := TOTAL - 1
        IDENT |         0050 |  TOTAL
   --> Entering Statement
    --> Entering handleAssignment
     --> Entering Variable
        ASIGN |         0037 |  :=
     <-- Exiting Variable
        IDENT |         0050 |  TOTAL
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering Variable
        SUBTR |         0033 |  -
        <-- Exiting Variable
       <-- Exiting Factor
      <-- Exiting Term
      --> Entering Addop
        INTEG |         0051 |  1
      <-- Exiting Addop
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
0018 UNTIL TOTAL <= 20;
        UNTIL |         0018 |  UNTIL
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
    <-- Exiting handleAssignment
   <-- Exiting Statement
        IDENT |         0050 |  TOTAL
   --> Entering RelExpression
    --> Entering SimpleExpression
     --> Entering Term
      --> Entering Factor
       --> Entering Variable
        LOETN |         0041 |  <=
       <-- Exiting Variable
      <-- Exiting Factor
     <-- Exiting Term
    <-- Exiting SimpleExpression
    --> Entering Relop
        INTEG |         0051 |  20
    <-- Exiting Addop
    --> Entering SimpleExpression
     --> Entering Term
      --> Entering Factor
       --> Entering UnsignedConstant
        --> Entering UnsignedNumber
        SEMCO |         0036 |  ;
        <-- Exiting UnsignedNumber
       <-- Exiting UnsignedConstant
      <-- Exiting Factor
     <-- Exiting Term
    <-- Exiting SimpleExpression
   <-- Exiting Statement
0019
0020 IF TOTAL > 15 THEN
        IFFFF |         0004 |  IF
   --> Entering Statement
        IDENT |         0050 |  TOTAL
    --> Entering RelExpression
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering Variable
        GRTHN |         0038 |  >
        <-- Exiting Variable
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
     --> Entering Relop
        INTEG |         0051 |  15
     <-- Exiting Addop
     --> Entering SimpleExpression
      --> Entering Term
       --> Entering Factor
        --> Entering UnsignedConstant
         --> Entering UnsignedNumber
        THENN |         0005 |  THEN
         <-- Exiting UnsignedNumber
        <-- Exiting UnsignedConstant
       <-- Exiting Factor
      <-- Exiting Term
     <-- Exiting SimpleExpression
0021   BEGIN
        BEGIN |         0011 |  BEGIN
     --> Entering Statement
0022   DOWHILE TOTAL > 10
        DOWHI |         0014 |  DOWHILE
      --> Entering Statement
        IDENT |         0050 |  TOTAL
       --> Entering RelExpression
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering Variable
        GRTHN |         0038 |  >
           <-- Exiting Variable
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
        --> Entering Relop
        INTEG |         0051 |  10
        <-- Exiting Addop
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering UnsignedConstant
            --> Entering UnsignedNumber
0023     TOTAL := TOTAL - (2 * 1)
        IDENT |         0050 |  TOTAL
            <-- Exiting UnsignedNumber
           <-- Exiting UnsignedConstant
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
        --> Entering Statement
         --> Entering handleAssignment
          --> Entering Variable
        ASIGN |         0037 |  :=
          <-- Exiting Variable
        IDENT |         0050 |  TOTAL
          --> Entering SimpleExpression
           --> Entering Term
            --> Entering Factor
             --> Entering Variable
        SUBTR |         0033 |  -
             <-- Exiting Variable
            <-- Exiting Factor
           <-- Exiting Term
           --> Entering Addop
        PAR_L |         0034 |  (
           <-- Exiting Addop
           --> Entering Term
            --> Entering Factor
        INTEG |         0051 |  2
             --> Entering SimpleExpression
              --> Entering Term
               --> Entering Factor
                --> Entering UnsignedConstant
                 --> Entering UnsignedNumber
        MULTI |         0031 |  *
                 <-- Exiting UnsignedNumber
                <-- Exiting UnsignedConstant
               <-- Exiting Factor
               --> Entering Mulop
        INTEG |         0051 |  1
               <-- Exiting Mulop
               --> Entering Factor
                --> Entering UnsignedConstant
                 --> Entering UnsignedNumber
        PAR_R |         0035 |  )
                 <-- Exiting UnsignedNumber
                <-- Exiting UnsignedConstant
               <-- Exiting Factor
              <-- Exiting Term
             <-- Exiting SimpleExpression
0024   END
        ENDDD |         0012 |  END
            <-- Exiting Factor
           <-- Exiting Term
          <-- Exiting SimpleExpression
         <-- Exiting handleAssignment
        <-- Exiting Statement
       <-- Exiting Statement
0025 ELSE
        ELSEE |         0006 |  ELSE
      <-- Exiting Statement
0026   IF TOTAL < 12 THEN
        IFFFF |         0004 |  IF
      --> Entering Statement
        IDENT |         0050 |  TOTAL
       --> Entering RelExpression
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering Variable
        LETHN |         0039 |  <
           <-- Exiting Variable
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
        --> Entering Relop
        INTEG |         0051 |  12
        <-- Exiting Addop
        --> Entering SimpleExpression
         --> Entering Term
          --> Entering Factor
           --> Entering UnsignedConstant
            --> Entering UnsignedNumber
        THENN |         0005 |  THEN
            <-- Exiting UnsignedNumber
           <-- Exiting UnsignedConstant
          <-- Exiting Factor
         <-- Exiting Term
        <-- Exiting SimpleExpression
0027     WRITELN(TOTAL)
        WRILN |         0009 |  WRITELN
        --> Entering Statement
        PAR_L |         0034 |  (
        IDENT |         0050 |  TOTAL
        PAR_R |         0035 |  )
0028 END.
        ENDDD |         0012 |  END
        <-- Exiting Statement
       <-- Exiting Statement
      <-- Exiting Statement
        PERID |         0048 |  .
     <-- Exiting Block
Success.
    <-- Exiting Program
Done.